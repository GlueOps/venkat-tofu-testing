name: terraform Workflow

on:
  issue_comment:
    types: [created]

jobs:
  prepare-matrix:
    if: >-
      contains(github.event.comment.body, 'terraform plan') ||
      contains(github.event.comment.body, 'terraform apply') ||
      contains(github.event.comment.body, 'terraform yolo')
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Find Modified Terraform Directories
        id: set-matrix
        run: |
          echo "Fetching repository history..."
          git fetch --no-tags --depth=100 origin +refs/heads/*:refs/remotes/origin/*

          echo "Determining if this is a PR event..."
          PR_URL=$(jq --raw-output .issue.pull_request.url "$GITHUB_EVENT_PATH")
          if [ -z "$PR_URL" ] || [ "$PR_URL" == "null" ]; then
            echo "This does not seem to be a Pull Request event."
            echo "::set-output name=matrix::{}"
            exit 0
          fi

          echo "Fetching PR details..."
          PR_DETAILS=$(curl -s -H "Authorization: token $GITHUB_TOKEN" "$PR_URL")
          BASE_REF=$(echo "$PR_DETAILS" | jq --raw-output .base.ref)
          HEAD_REF=$(echo "$PR_DETAILS" | jq --raw-output .head.ref)

          echo "Looking for modified .tf files..."
          FILES=$(git diff --name-only "origin/$BASE_REF...origin/$HEAD_REF" | grep '\.tf$' || echo "")
          DIRS=()
          for file in $FILES; do
            DIR=$(dirname "$file")
            if [[ ! " ${DIRS[@]} " =~ " ${DIR} " ]]; then
              DIRS+=("$DIR")
            fi
          done
          echo "Found directories: ${DIRS[@]}"
          if [ ${#DIRS[@]} -eq 0 ]; then
            echo "No Terraform files modified."
            echo "::set-output name=matrix::{}"
          else
            JSON_FMT=$(IFS=,; echo "[{\"directory\":\"${DIRS[*]}\"}]" | sed 's/ /\", \"directory\":\"/g')
            echo "Matrix JSON: $JSON_FMT"
            echo "::set-output name=matrix::{\"include\":$JSON_FMT}"
          fi

  terraform-plan:
    needs: prepare-matrix
    if: >-
      contains(github.event.comment.body, 'terraform plan') &&
      needs.prepare-matrix.outputs.matrix != '{}'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.prepare-matrix.outputs.matrix.include)}}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Terraform Plan
        run: |
          echo "Running Terraform Plan for directory: ${{ matrix.directory }}"
          # Replace with actual Terraform command
          # Example: terraform plan -path=${{ matrix.directory }}
